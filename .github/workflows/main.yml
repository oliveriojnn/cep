name: Deploy CEP.
on:
  push:
    branches:
      - dev
      - master
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Copy env
      run: |
        if: github.ref == 'refs/heads/master'
          php -r "file_exists('src/.env') || copy('src/env-production.txt', 'src/testando.txt');"
        fi
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_email: ${{ secrets.GCP_EMAIL }}
        service_account_key: ${{ secrets.GCP_CREDENTIALS }}
        export_default_credentials: true
    - name: Configure Docker
      run: |
        gcloud auth configure-docker
    - name: Build & Publish
      run: |
        if: github.ref == 'refs/heads/dev'
          gcloud config set project ${{ secrets.GCP_PROJECT }}
          gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT }}/staging-${{ secrets.GCP_APPLICATION }}:${{ github.sha }}
          gcloud config set run/region us-central1
        fi
        if: github.ref == 'refs/heads/master'
          gcloud config set project ${{ secrets.GCP_PROJECT }}
          gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT }}/production-${{ secrets.GCP_APPLICATION }}:${{ github.sha }}
          gcloud config set run/region us-central1
        fi
    - name: Restart deployment
      run: |
        if: github.ref == 'refs/heads/dev'
          gcloud container clusters get-credentials sjcc-staging --zone us-central1 --project ${{ secrets.GCP_PROJECT }}
          kubectl set image deployment cep cep=gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }}:${{ github.sha }}
        fi
        if: github.ref == 'refs/heads/master'
          gcloud container clusters get-credentials sjcc-production --zone us-central1 --project ${{ secrets.GCP_PROJECT }}
          kubectl set image deployment cep cep=gcr.io/${{ secrets.GCP_PROJECT }}/${{ secrets.GCP_APPLICATION }}:${{ github.sha }}
        fi
